    fvVectorMatrix UEqn
    (
        fvm::ddt(rho, U)
      + fvm::div(rhoPhi, U)
      + turbulence->divDevRhoReff(rho, U)
     ==
        fvOptions(rho, U)
    );

    UEqn.relax();

    fvOptions.constrain(UEqn);
	Info<< "!!!!!!! 100" << endl;
    if (pimple.momentumPredictor())
    {	
        solve
        (	
            UEqn
         ==
            fvc::reconstruct
            (
                (
                    tensionForce //mixture.surfaceTensionForce()
                  - ghf*fvc::snGrad(rho)
                  - fvc::snGrad(p_rgh)
                ) * mesh.magSf()
            )
        );
	Info<< "!!!!!!! 10004" << endl;
        fvOptions.correct(U);
    }
